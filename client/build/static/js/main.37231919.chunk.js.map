{"version":3,"sources":["services/token.js","routes.js","context/auth.context.js","components/spinner/Spinner.jsx","App.jsx","reportWebVitals.js","screens/:username/index.jsx","index.jsx","services/api.js"],"names":["getStoredAuthToken","localStorage","getItem","storeAuthToken","token","setItem","removeStoredAuthToken","removeItem","Routes","Home","Auth","Signin","Signup","ForgotPassword","Dashboard","Account","Appearance","Pro","AuthContext","createContext","AuthProvider","props","useState","user","setUser","loading","setLoading","initializeUser","a","api","auth","me","useEffect","login","useCallback","form","register","logout","window","location","reload","update","fields","_delete","delete","value","useMemo","Provider","useAuth","context","useContext","undefined","Error","Spinner","className","DashboardScreen","React","lazy","AuthScreen","App","Suspense","fallback","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Site","site","console","log","style","backgroundImage","background","JSON","stringify","pathname","Object","values","includes","slice","renderUserSite","renderApplication","ReactDOM","render","StrictMode","document","getElementById","init","API_URL","callApi","url","method","data","headers","Accept","Authorization","fetch","body","json","response","success","Promise","reject","resetPassword","forgotPassword","get","id","username","link","create","reOrder","links"],"mappings":"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","file":"static/js/main.37231919.chunk.js","sourcesContent":["export const getStoredAuthToken = () =>\n  localStorage.getItem(\"linkme__authToken\");\n\nexport const storeAuthToken = (token) =>\n  localStorage.setItem(\"linkme__authToken\", token);\n\nexport const removeStoredAuthToken = () =>\n  localStorage.removeItem(\"linkme__authToken\");\n","export const Routes = {\n  Home: \"/\",\n  Auth: \"/auth\",\n  Signin: \"/auth/signin\",\n  Signup: \"/auth/signup\",\n  ForgotPassword: \"/auth/forgot-password\",\n  Dashboard: \"/admin\",\n  Account: \"/admin/account\",\n  Appearance: \"/admin/appearance\",\n  Pro: \"/admin/pro\",\n};\n","import React, {\n  createContext,\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n  useContext,\n} from \"react\";\nimport api from \"../services/api\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport {\n  getStoredAuthToken,\n  removeStoredAuthToken,\n  storeAuthToken,\n} from \"../services/token\";\n\nconst AuthContext = createContext();\n\nfunction AuthProvider(props) {\n  const [user, setUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const initializeUser = async () => {\n    try {\n      const token = getStoredAuthToken();\n      if (token) {\n        const { user } = await api.auth.me();\n        setUser(user);\n      }\n    } catch (err) {\n      // token not valid, should check for refresh token\n      removeStoredAuthToken();\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    initializeUser();\n  }, []);\n\n  const login = useCallback(\n    async (form) => {\n      const { token, user } = await api.auth.login(form);\n      storeAuthToken(token);\n      setUser(user);\n    },\n    [setUser]\n  );\n\n  const register = useCallback(\n    async (form) => {\n      const { token, user } = await api.auth.register(form);\n      storeAuthToken(token);\n      setUser(user);\n    },\n    [setUser]\n  );\n\n  const logout = useCallback(() => {\n    removeStoredAuthToken();\n    window.location.reload();\n  }, [setUser]);\n\n  const update = useCallback(\n    async (fields) => {\n      const { user } = await api.user.update(fields);\n      setUser(user);\n    },\n    [setUser]\n  );\n\n  const _delete = useCallback(async () => {\n    await api.user.delete();\n    logout();\n  }, [setUser]);\n\n  const value = useMemo(\n    () => ({ user, login, logout, register, update, _delete }),\n    [login, logout, register, update, _delete, user]\n  );\n\n  if (loading) {\n    return <Spinner />;\n  }\n  return <AuthContext.Provider value={value} {...props} />;\n}\n\nfunction useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(`useAuth must be used within a AuthProvider`);\n  }\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n","import React from \"react\";\nimport \"./styles.scss\";\n\nexport default function Spinner() {\n  return (\n    <div className=\"spinner\">\n      <div className=\"spinner-dot\"></div>\n      <div className=\"spinner-dot\"></div>\n      <div className=\"spinner-dot\"></div>\n      <div className=\"spinner-dot\"></div>\n      <div className=\"spinner-dot\"></div>\n      <div className=\"spinner-dot\"></div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useAuth } from \"./context/auth.context\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Routes } from \"./routes\";\n\nconst DashboardScreen = React.lazy(() => import(\"./screens/dashboard\"));\nconst AuthScreen = React.lazy(() => import(\"./screens/auth\"));\n\nfunction App() {\n  const { user } = useAuth();\n\n  return (\n    <React.Suspense fallback={<Spinner />}>\n      <Switch>\n        <Route path={Routes.Home} exact>\n          homepage\n        </Route>\n        <Route path={Routes.Dashboard}>\n          <DashboardScreen />\n        </Route>\n        <Route path={Routes.Auth}>\n          <AuthScreen />\n        </Route>\n        <Route path=\"*\">404</Route>\n      </Switch>\n    </React.Suspense>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst Site = ({ site }) => {\n  console.log(site);\n  return (\n    <div\n      className=\"site\"\n      style={{ backgroundImage: `url(${site.background})` }}\n    >\n      {JSON.stringify(site)}\n    </div>\n  );\n};\n\nexport default Site;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\n\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AuthProvider } from \"./context/auth.context\";\nimport { Routes } from \"./routes\";\nimport api from \"./services/api\";\nimport Site from \"./screens/:username\";\n\nasync function init() {\n  const { pathname } = window.location;\n  const isApplicationRoute = Object.values(Routes).includes(pathname);\n\n  if (!isApplicationRoute) {\n    const { site } = await api.user.site(pathname.slice(1));\n    if (site) {\n      return renderUserSite(site);\n    }\n  }\n  renderApplication();\n}\n\nfunction renderUserSite(site) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Site site={site} />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n}\n\nfunction renderApplication() {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Router>\n        <AuthProvider>\n          <App />\n        </AuthProvider>\n      </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n}\n\ninit();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { getStoredAuthToken } from \"./token\";\n\nconst API_URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://---\"\n    : \"http://localhost:4000\";\n\nfunction callApi(url, method = \"GET\", data) {\n  const token = getStoredAuthToken();\n  const headers = {\n    Accept: \"application/json\",\n    \"content-type\": \"application/json\",\n    Authorization: token ? `Bearer ${token}` : undefined,\n  };\n  return fetch(API_URL + \"/api\" + url, {\n    method,\n    headers,\n    body: JSON.stringify(data),\n  })\n    .then((data) => data.json())\n    .then((response) => {\n      if (response.success === false) {\n        return Promise.reject(response);\n      }\n      return response;\n    });\n}\n\nexport default {\n  auth: {\n    me: () => callApi(\"/auth/me\"),\n    login: (user) => callApi(\"/auth/login\", \"POST\", user),\n    register: (user) => callApi(\"/auth/register\", \"POST\", user),\n    resetPassword: (user) => callApi(\"/auth/register\", \"POST\", user),\n    forgotPassword: (user) => callApi(\"/auth/register\", \"POST\", user),\n  },\n  site: {\n    get: (id) => callApi(`/site/${id}`),\n    update: (fields) => callApi(`/site`, \"PATCH\", fields),\n  },\n  user: {\n    site: (username) => callApi(`/user/${username}`),\n    update: (fields) => callApi(`/user`, \"PATCH\", fields),\n    delete: () => callApi(\"/user\", \"DELETE\"),\n  },\n  link: {\n    create: () => callApi(\"/link\", \"POST\"),\n    update: (id, data) => callApi(`/link/${id}`, \"PATCH\", data),\n    reOrder: (links) => callApi(\"/link/order\", \"PATCH\", links),\n    delete: (id) => callApi(`/link/${id}`, \"DELETE\"),\n  },\n};\n"],"sourceRoot":""}