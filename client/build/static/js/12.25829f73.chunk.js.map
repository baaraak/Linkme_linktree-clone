{"version":3,"sources":["services/cloudinary.js","screens/dashboard/appearance/Profile.jsx","screens/dashboard/appearance/Background.jsx","screens/dashboard/appearance/Buttons.jsx","screens/dashboard/appearance/index.jsx"],"names":["CLOUD_NAME","Cloudinary","widget_script","options","cloudName","uploadPreset","cropping","multiple","resourceType","useCloudinaryWidget","callback","useState","widget","setWidget","initUploaderWidget","a","loadScript","window","cloudinary","createUploadWidget","useEffect","Profile","username","avatar","title","bio","onChange","error","result","event","console","log","info","public_id","className","Strong","size","Avatar","src","Button","height","appearance","fullWidth","onClick","open","disabled","TextInputField","label","inputHeight","placeholder","defaultValue","onBlur","e","target","value","TextareaField","BACKGROUNDS","Background","background","colorPickerOpen","setColorPickerOpen","secure_url","Text","map","bg","publicId","secure","width","crop","toUpperCase","Dialog","isShown","onCloseComplete","hasFooter","hasHeader","gradient","buttons","Buttons","button","t","id","thumbnail","alt","Appearance","useAuth","user","update","useSite","site","data","updateSite"],"mappings":"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","file":"static/js/12.25829f73.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { loadScript } from \"./utils\";\n\nexport const CLOUD_NAME = \"djyerevgr\";\n\nexport const Cloudinary = {\n  widget_script: \"https://widget.cloudinary.com/v2.0/global/all.js\",\n  options: {\n    cloudName: CLOUD_NAME,\n    uploadPreset: \"jfopnpe8\",\n    cropping: true,\n    multiple: false,\n    resourceType: \"image\",\n  },\n};\n\nexport const useCloudinaryWidget = (callback) => {\n  const [widget, setWidget] = useState();\n\n  const initUploaderWidget = async () => {\n    await loadScript(Cloudinary.widget_script);\n\n    setWidget(\n      window.cloudinary.createUploadWidget(Cloudinary.options, callback)\n    );\n  };\n\n  useEffect(() => {\n    initUploaderWidget();\n  }, []);\n\n  return { widget };\n};\n","import {\n  Avatar,\n  Strong,\n  Textarea,\n  TextareaField,\n  TextInputField,\n} from \"evergreen-ui\";\nimport Button from \"components/button/Button\";\nimport React from \"react\";\nimport { Transformation, Image, Placeholder } from \"cloudinary-react\";\nimport { loadScript } from \"services/utils\";\nimport {\n  Cloudinary,\n  CLOUD_NAME,\n  useCloudinaryWidget,\n} from \"services/cloudinary\";\n\nconst Profile = ({ username, avatar, title, bio, onChange }) => {\n  const { widget } = useCloudinaryWidget((error, result) => {\n    if (!error && result && result.event === \"success\") {\n      console.log(result.info);\n      onChange({ avatar: result.info.public_id });\n    }\n  });\n\n  return (\n    <div className=\"profile\">\n      <Strong size={600} className=\"box__title\">\n        Profile\n      </Strong>\n      <div className=\"box shadow-sm\">\n        <section>\n          <Avatar src={avatar} size={100} />\n          <Button\n            height={40}\n            appearance=\"primary\"\n            fullWidth\n            onClick={() => console.log(widget.open())}\n          >\n            Pick an Image\n          </Button>\n          <Button\n            height={40}\n            fullWidth\n            disabled={!avatar}\n            onClick={() => onChange({ avatar: \"\" })}\n          >\n            Remove\n          </Button>\n        </section>\n        <TextInputField\n          label=\"Profile Title\"\n          inputHeight={40}\n          placeholder={username}\n          defaultValue={title}\n          onBlur={(e) => onChange({ title: e.target.value })}\n        />\n        <TextareaField\n          label=\"Bio\"\n          placeholder=\"Enter a bio description to appear on your Linkme\"\n          onBlur={(e) => onChange({ bio: e.target.value })}\n          defaultValue={bio}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport { Transformation, Image } from \"cloudinary-react\";\nimport { Dialog, Strong, Text } from \"evergreen-ui\";\nimport ReactGPicker from \"react-gcolor-picker\";\n\nimport { CLOUD_NAME, useCloudinaryWidget } from \"services/cloudinary\";\n\nconst BACKGROUNDS = [\n  \"flowers\",\n  \"gradient\",\n  \"lights\",\n  \"mounts\",\n  \"rain\",\n  \"music\",\n  \"stars\",\n  \"wood\",\n  \"tech\",\n  \"road\",\n];\n\nconst Background = ({ background, onChange }) => {\n  const [colorPickerOpen, setColorPickerOpen] = useState(false);\n  const { widget } = useCloudinaryWidget((error, result) => {\n    if (!error && result && result.event === \"success\") {\n      onChange({ avatar: result.info.secure_url });\n    }\n  });\n  const handleColorChange = (value) => {\n    console.log(value);\n  };\n  return (\n    <div className=\"backgrounds\">\n      <Strong size={600} className=\"box__title\">\n        Background\n      </Strong>\n      <div className=\"box shadow-sm\">\n        <div\n          className=\"box-item box-item--custom\"\n          onClick={() => setColorPickerOpen(true)}\n        >\n          <div className=\"box-item__thumbnail\">CHOOSE COLOR</div>\n          <div className=\"box-item__name\">\n            <Text>COLOR</Text>\n          </div>\n        </div>\n        <div\n          className=\"box-item box-item--custom\"\n          onClick={() => widget.open()}\n        >\n          <div className=\"box-item__thumbnail\">UPLOAD IMAGE</div>\n          <div className=\"box-item__name\">\n            <Text>UPLOAD</Text>\n          </div>\n        </div>\n\n        {BACKGROUNDS.map((bg) => (\n          <div\n            key={bg}\n            onClick={() => onChange({ background: bg })}\n            className={`box-item ${\n              bg === background ? \"box-item--selected\" : \"\"\n            }`}\n          >\n            <div className=\"box-item__thumbnail\">\n              <Image\n                publicId={`linkme/${bg}.jpg`}\n                cloudName={CLOUD_NAME}\n                secure=\"true\"\n              >\n                <Transformation width=\"125\" height=\"190\" crop=\"thumb\" />\n              </Image>\n            </div>\n            <div className=\"box-item__name\">\n              <Text>{bg.toUpperCase()}</Text>\n            </div>\n          </div>\n        ))}\n      </div>\n      <Dialog\n        isShown={colorPickerOpen}\n        onCloseComplete={() => setColorPickerOpen(false)}\n        hasFooter={false}\n        hasHeader={false}\n        width={\"auto\"}\n      >\n        <ReactGPicker value=\"red\" onChange={handleColorChange} gradient />\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Background;\n","import { Strong, Text } from \"evergreen-ui\";\nimport React from \"react\";\n\nconst buttons = [\"fill\", \"outline\", \"hard-shadow\", \"soft-shadow\"];\n\nconst Buttons = ({ button = 1 }) => {\n  return (\n    <div className=\"buttons\">\n      <Strong size={600} className=\"box__title\">\n        Buttons\n      </Strong>\n      <div className=\"box shadow-sm\">\n        {buttons.map((t) => (\n          <div\n            key={t}\n            className={`button ${t.id === button ? \"button--selected\" : \"\"}`}\n          >\n            <div className=\"button__thumbnail\">\n              <img src={t.thumbnail} alt=\"\" />\n            </div>\n            <div className=\"button__name\">\n              <Text>Theme {t.id}</Text>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport Themes from \"./Themes\";\nimport Background from \"./Background\";\nimport Fonts from \"./Fonts\";\nimport Buttons from \"./Buttons\";\nimport { useAuth } from \"context/auth.context\";\nimport { useSite } from \"context/site.context\";\n\nexport default function Appearance() {\n  const { user, update } = useAuth();\n  const { data: site, update: updateSite } = useSite();\n  return (\n    <div className=\"appearance page__container\">\n      <Profile\n        username={user.username}\n        onChange={update}\n        avatar={user.avatar}\n        title={user.title}\n        bio={user.bio}\n      />\n      <Background background={site.background} onChange={updateSite} />\n      <Buttons />\n      {/* <Themes />\n      {/* <Fonts />*/}\n    </div>\n  );\n}\n"],"sourceRoot":""}