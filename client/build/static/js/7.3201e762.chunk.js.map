{"version":3,"sources":["context/site.context.js","icons/Logo.js","components/logo/Logo.jsx","hooks/useWindowDimensions.js","components/header/Header.jsx","components/menu/Menu.jsx","components/toolbar/Toolbar.jsx","services/constants.js","screens/dashboard/index.jsx","components/button/Button.jsx","services/utils.js"],"names":["AuthContext","React","createContext","SiteProvider","props","useState","data","setData","loading","setLoading","user","useAuth","getUserSite","a","api","site","get","toaster","danger","message","useEffect","update","useCallback","fields","updateLinks","links","d","value","useMemo","Provider","useSite","context","useContext","undefined","Error","GoogleIcon","width","height","enableBackground","viewBox","fill","Logo","small","size","to","className","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","Header","username","avatar","onLogout","isMobile","Popover","content","Pane","display","justifyContent","flexDirection","Menu","Group","title","Item","icon","CogIcon","StarEmptyIcon","HelpIcon","color","toUpperCase","is","Link","Routes","Profile","UserIcon","onClick","LogOutIcon","MenuIcon","Avatar","src","pathname","useLocation","Dashboard","Appearance","Account","Pro","Toolbar","qrCode","setQrCode","url","location","origin","generateQR","QRCode","toDataURL","imageData","console","error","Strong","href","target","copyToClipboard","success","Button","Dialog","isShown","hasFooter","onCloseComplete","Text","alt","fullWidth","Links","lazy","DashboardScreen","logout","Suspense","fallback","Spinner","path","Signin","forwardRef","ref","children","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","map","l","i","index","loadScript","Promise","resolve","reject","s","document","createElement","r","type","async","onerror","err","onload","onreadystatechange","this","readyState","t","getElementsByTagName","parentElement","insertBefore","text","el","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild"],"mappings":"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","file":"static/js/7.3201e762.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport api from \"../services/api\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport { useAuth } from \"./auth.context\";\nimport {\n  getStoredAuthToken,\n  removeStoredAuthToken,\n  storeAuthToken,\n} from \"../services/token\";\nimport { toaster } from \"evergreen-ui\";\n\nconst AuthContext = React.createContext();\n\nfunction SiteProvider(props) {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const { user } = useAuth();\n\n  const getUserSite = async () => {\n    try {\n      const { site } = await api.site.get(user.site);\n\n      setData(site);\n    } catch (err) {\n      toaster.danger(err.message);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getUserSite();\n  }, []);\n\n  const update = useCallback(\n    async (fields) => {\n      const { site } = await api.site.update(fields);\n      setData(site);\n    },\n    [setData]\n  );\n\n  const updateLinks = useCallback(\n    (links) => {\n      setData((d) => ({ ...d, links }));\n    },\n    [setData]\n  );\n\n  const value = useMemo(() => ({ data, updateLinks, update }), [\n    data,\n    updateLinks,\n    update,\n  ]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n  return <AuthContext.Provider value={value} {...props} />;\n}\n\nfunction useSite() {\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(`useSite must be used within a SiteProvider`);\n  }\n  return context;\n}\n\nexport { SiteProvider, useSite };\n","export default function GoogleIcon({ width = 512, height = 512 }) {\n  return (\n    <svg\n      enableBackground=\"new 0 0 512 512\"\n      height={height}\n      viewBox=\"0 0 512 512\"\n      width={width}\n    >\n      <g>\n        <path\n          d=\"m422.818 200.381-4.06 4.216 1.087 41.432c41.023 41.642 66.347 98.793 66.347 161.865 0 5.941-.226 11.83-.667 17.658l15.755-7.978 1.082-2.892c1.158-9.757 1.777-19.679 1.777-29.748v-.001c0-73.075-31.347-138.825-81.321-184.552z\"\n          fill=\"#60b9fe\"\n        />\n        <path\n          d=\"m419.676 239.596 1.314 50.086 2.943 7.894c30.388 35.151 50.047 79.83 53.898 128.953l3.359 1.219 6.818-3.453c.505-6.264.773-12.595.773-18.99.001-64.809-26.436-123.436-69.105-165.709z\"\n          fill=\"#1ca8ff\"\n        />\n        <path\n          d=\"m24.844 407.895c0-63.686 25.809-121.344 67.538-163.085l2.042-40.804-4.285-7.982c-52.807 45.854-86.201 113.481-86.201 188.91v.001c0 10.286.64 20.42 1.847 30.379l1.417 3.484 18.246 5.768c-.393-5.508-.604-11.065-.604-16.671z\"\n          fill=\"#60b9fe\"\n        />\n        <path\n          d=\"m22.254 405.305c0 6.221.249 12.383.728 18.481l5.812 1.837 1.607-.846c4.326-50.158 25.135-95.6 56.997-130.876l2.741-4.261 2.57-51.36c-43.458 42.366-70.455 101.538-70.455 167.025z\"\n          fill=\"#1ca8ff\"\n        />\n        <path\n          d=\"m255.518 177.221c35.032 0 68.232 7.824 97.97 21.796l-2.363-39.309-11.971-10.007c-26.569-9.616-55.228-14.867-85.115-14.867-28.224 0-55.354 4.68-80.663 13.299l-12.508 12.091-2.866 38.582c29.622-13.84 62.662-21.585 97.516-21.585z\"\n          fill=\"#60b9fe\"\n        />\n        <path\n          d=\"m158.421 193.16-3.217 43.296 6.352 3.244c28.202-12.766 59.512-19.875 92.482-19.875 34.449 0 67.08 7.769 96.252 21.635l5.541-3.46-2.68-44.591c-29.703-13.709-62.771-21.37-97.633-21.37-34.652.002-67.533 7.568-97.097 21.121z\"\n          fill=\"#1ca8ff\"\n        />\n        <path\n          d=\"m498.296 415.976c-.219.128-.438.255-.658.382-49.471 28.562-105.291 36.139-157.176 25.521l-9.956 1.299-45.949 24.99c32.319 12.295 67.369 19.052 104.004 19.052 11.877 0 23.584-.727 35.091-2.103 12.024-4.635 23.847-10.244 35.359-16.891h.001c18.698-10.795 35.471-23.642 50.202-38.09 7.581-7.435-1.74-19.5-10.918-14.16z\"\n          fill=\"#8bcaff\"\n        />\n        <path\n          d=\"m384 484.988c-34.086 0-66.642-6.542-96.491-18.426l-31.509 17.136-.001 5.56c57.757 18.928 122.149 16.846 180.658-9.584-17.008 3.484-34.619 5.314-52.657 5.314z\"\n          fill=\"#60b9fe\"\n        />\n        <path\n          d=\"m256 38.49v-3.047l-19.348-12.62-2.572-.469c-8.52 3.723-16.927 7.927-25.169 12.686h-.001c-11.526 6.655-22.314 14.096-32.352 22.203-35.733 45.809-57.04 103.42-57.04 166.019 0 83.208 37.625 157.614 96.775 207.178l39.707-15.786v-9.212c-25.818-18.18-48.2-42.11-65.027-71.255-58.565-101.437-28.956-229.57 65.027-295.697z\"\n          fill=\"#8bcaff\"\n        />\n        <path\n          d=\"m122.992 223.981c0-70.168 27.695-133.861 72.742-180.765-109.363 72.386-144.825 218.356-78.365 333.467 14.651 25.375 33.087 47.197 54.169 65.195l6.675 3.703 43.408-17.259c-60.096-47.817-98.629-121.575-98.629-204.341z\"\n          fill=\"#60b9fe\"\n        />\n        <path\n          d=\"m320.495 46.069v7.359s90.88 142.851 27.353 269.219c-63.528 126.369-186.373 146.354-264.025 143.916l-20.296 7.41c117.925 60.852 264.053 18.846 331.104-97.29 65.597-113.617 31.907-257.299-74.136-330.614z\"\n          fill=\"#b5dcff\"\n        />\n        <path\n          d=\"m387.463 220.621c0-67.117-25.342-128.309-66.968-174.552-5.604-3.875-11.401-7.562-17.405-11.029h-.001c-18.698-10.796-38.21-18.898-58.089-24.432-10.23-2.848-16.017 11.257-6.803 16.536.22.126.44.252.659.379 107.374 61.992 144.162 199.29 82.17 306.664s-199.29 144.163-306.664 82.171c-.22-.127-.44-.254-.659-.382-9.178-5.34-18.5 6.724-10.919 14.16 14.732 14.449 31.506 27.296 50.203 38.091h.001c3.485 2.012 7 3.921 10.539 5.747 20.156 4.99 41.229 7.655 62.928 7.655 144.151-.001 261.008-116.858 261.008-261.008z\"\n          fill=\"#8bcaff\"\n        />\n      </g>\n    </svg>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LogoIcon from \"icons/Logo\";\nimport \"./logo.scss\";\n\nconst Logo = ({ small = false, size = 50 }) => {\n  return (\n    <Link to=\"/\" className=\"logo\">\n      <LogoIcon width={size} height={size} />\n      {!small && <h1>Linkme</h1>}\n    </Link>\n  );\n};\n\nexport default Logo;\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Menu,\n  Avatar,\n  UserIcon,\n  CogIcon,\n  StarEmptyIcon,\n  HelpIcon,\n  LogOutIcon,\n  MenuIcon,\n  Pane,\n  Popover,\n  Position,\n} from \"evergreen-ui\";\nimport Logo from \"components/logo/Logo\";\n\nimport useWindowDimensions from \"hooks/useWindowDimensions\";\nimport { Routes } from \"routes\";\n\nimport \"./header.scss\";\n\nexport default function Header({ username, avatar, onLogout }) {\n  const { width } = useWindowDimensions();\n  const isMobile = width < 768;\n  return (\n    <header>\n      <Logo small size={30} />\n\n      <div className=\"actions\">\n        <Popover\n          content={\n            <Pane display=\"flex\" justifyContent=\"center\" flexDirection=\"column\">\n              <Menu>\n                <Menu.Group title=\"SUPPORT\">\n                  <Menu.Item icon={CogIcon}>Help Topics</Menu.Item>\n                  <Menu.Item icon={StarEmptyIcon}>Get Started</Menu.Item>\n                  <Menu.Item icon={HelpIcon}>Ask A Question</Menu.Item>\n                </Menu.Group>\n              </Menu>\n            </Pane>\n          }\n        >\n          <div>\n            <HelpIcon size={28} color=\"disabled\" />\n          </div>\n        </Popover>\n\n        <div className=\"avatar\">\n          <Popover\n            content={\n              <Pane\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                <Menu>\n                  <Menu.Group title={username.toUpperCase()}>\n                    <Menu.Item is={Link} to={Routes.Profile} icon={UserIcon}>\n                      My Account\n                    </Menu.Item>\n                    <Menu.Item onClick={onLogout} icon={LogOutIcon}>\n                      Logout\n                    </Menu.Item>\n                  </Menu.Group>\n                </Menu>\n              </Pane>\n            }\n          >\n            {!isMobile ? (\n              <Avatar src={avatar} size={45} />\n            ) : (\n              <MenuIcon size={20} />\n            )}\n          </Popover>\n        </div>\n      </div>\n    </header>\n  );\n}\n","import React from \"react\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { Routes } from \"routes\";\n\nimport \"./menu.scss\";\n\nexport default function Menu() {\n  const { pathname } = useLocation();\n  return (\n    <nav className=\"menu\">\n      <Link\n        to={Routes.Dashboard}\n        className={pathname === Routes.Dashboard ? \"active\" : \"\"}\n      >\n        Links\n      </Link>\n      <Link\n        to={Routes.Appearance}\n        className={pathname === Routes.Appearance ? \"active\" : \"\"}\n      >\n        Appearance\n      </Link>\n      <Link\n        to={Routes.Account}\n        className={pathname === Routes.Account ? \"active\" : \"\"}\n      >\n        Profile\n      </Link>\n      <Link to={Routes.Pro} className={pathname === Routes.Pro ? \"active\" : \"\"}>\n        PRO\n      </Link>\n    </nav>\n  );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport {\n  Dialog,\n  Link,\n  Menu,\n  Pane,\n  Popover,\n  Strong,\n  Text,\n  toaster,\n} from \"evergreen-ui\";\nimport QRCode from \"qrcode\";\nimport Button from \"components/button/Button\";\n\nimport { copyToClipboard } from \"services/utils\";\nimport \"./toolbar.scss\";\nimport { QR_CODE_SIZE } from \"services/constants\";\n\nexport default function Toolbar({ username }) {\n  const [qrCode, setQrCode] = useState();\n  const url = useMemo(() => `${window.location.origin}/${username}`, [\n    username,\n  ]);\n\n  const handleOnCopy = () => {\n    copyToClipboard(url);\n    toaster.success(\"Copied to Clipboard!\");\n  };\n\n  const generateQR = async () => {\n    try {\n      const imageData = await QRCode.toDataURL(url, {\n        width: QR_CODE_SIZE,\n        height: QR_CODE_SIZE,\n      });\n      setQrCode(imageData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"toolbar\">\n      <Strong size={400} color=\"black\">\n        My Linkme:{\" \"}\n      </Strong>\n      <Link href={url} size={400} color=\"neutral\" target=\"_blank\">\n        {url}\n      </Link>\n      <Popover\n        content={\n          <Menu>\n            <Menu.Group>\n              <Menu.Item onClick={handleOnCopy}>Copy my Linkme URL</Menu.Item>\n              <Menu.Item onClick={generateQR}>\n                Download my Linkme QR Code\n              </Menu.Item>\n            </Menu.Group>\n          </Menu>\n        }\n      >\n        <Button>Share</Button>\n      </Popover>\n\n      {qrCode && (\n        <Dialog\n          isShown\n          title=\"QR Code\"\n          hasFooter={false}\n          width=\"auto\"\n          onCloseComplete={() => setQrCode(null)}\n        >\n          <div className=\"qrcode-dialog\">\n            <Strong>Barak</Strong>\n            <Text>{url}</Text>\n            <img src={qrCode} alt=\"\" />\n            <Button fullWidth height={40}>\n              Save image\n            </Button>\n          </div>\n        </Dialog>\n      )}\n    </div>\n  );\n}\n","// Minimum value to show the `preview` site mode\nexport const MINIMUM_PREVIEW_WIDTH = 768;\n// Generated QR code size (square)\nexport const QR_CODE_SIZE = 250;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { MINIMUM_PREVIEW_WIDTH } from \"services/constants\";\nimport useWindowDimensions from \"hooks/useWindowDimensions\";\n\nimport Header from \"components/header/Header\";\nimport Menu from \"components/menu/Menu\";\nimport Toolbar from \"components/toolbar/Toolbar\";\nimport { SiteProvider } from \"context/site.context\";\n\nimport \"./styles.scss\";\nimport { useAuth } from \"context/auth.context\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { Routes } from \"routes\";\n\nconst Links = React.lazy(() => import(\"./links\"));\nconst Account = React.lazy(() => import(\"./account\"));\nconst Appearance = React.lazy(() => import(\"./appearance\"));\n\nexport default function DashboardScreen() {\n  const { width } = useWindowDimensions();\n  const { user, logout } = useAuth();\n\n  // Un Authenticated users shouldn't see dashboard pages.\n  if (!user) return <Redirect to={Routes.Signin} />;\n  return (\n    <div className=\"dashboard\">\n      <Header username={user.username} avatar={user.avatar} onLogout={logout} />\n      <Toolbar username={user.username} />\n      <Menu />\n      <div className=\"page\">\n        <SiteProvider>\n          <React.Suspense fallback={<Spinner />}>\n            <Switch>\n              <Route path={Routes.Account}>\n                <Account />\n              </Route>\n              <Route path={Routes.Appearance}>\n                <Appearance />\n              </Route>\n              <Route path={Routes.Pro}>pro</Route>\n              <Route path={Routes.Dashboard}>\n                <Links />\n              </Route>\n              <Route path=\"*\">\n                <Redirect to={Routes.Dashboard} />\n              </Route>\n            </Switch>\n          </React.Suspense>\n        </SiteProvider>\n      </div>\n      {width > MINIMUM_PREVIEW_WIDTH && <div className=\"preview\">preview</div>}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button as ButtonUI } from \"evergreen-ui\";\n\nimport \"./styles.scss\";\n\nconst Button = React.forwardRef(\n  ({ children, className, height, fullWidth, ...props }, ref) => {\n    return (\n      <ButtonUI\n        ref={ref}\n        {...props}\n        height={height}\n        className={`btn ${className} ${fullWidth ? \"btn-fullWidth\" : \"\"}`}\n      >\n        {children}\n      </ButtonUI>\n    );\n  }\n);\n\nexport default Button;\n","/**\n *\n * @param {Array} list List of links\n * @param {Number} startIndex the index from start dragging\n * @param {Number} endIndex the index drop\n * @returns Array on new sorted links by index\n */\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result.map((l, i) => ({ ...l, index: i }));\n};\n\n// Load external scripts url\nexport const loadScript = (src) => {\n  return new Promise(function (resolve, reject) {\n    const s = document.createElement(\"script\");\n    let r = false;\n    s.type = \"text/javascript\";\n    s.src = src;\n    s.async = true;\n    s.onerror = function (err) {\n      reject(err, s);\n    };\n    s.onload = s.onreadystatechange = function () {\n      // console.log(this.readyState); // uncomment this line to see which ready states are called.\n      if (!r && (!this.readyState || this.readyState == \"complete\")) {\n        r = true;\n        resolve();\n      }\n    };\n    const t = document.getElementsByTagName(\"script\")[0];\n    t.parentElement.insertBefore(s, t);\n  });\n};\n\n// Copy text input to user clipboard\nexport const copyToClipboard = (text) => {\n  const el = document.createElement(\"input\");\n  el.value = text;\n  el.setAttribute(\"readonly\", \"\");\n  el.style.position = \"absolute\";\n  el.style.left = \"-9999px\";\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n};\n"],"sourceRoot":""}