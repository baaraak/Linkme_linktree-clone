{"version":3,"sources":["screens/dashboard/account/index.jsx","services/validations.js"],"names":["Account","useAuth","user","_delete","update","useState","showDeleteWarning","setShowDeleteWarning","useForm","resolver","joiResolver","profileSchema","mode","control","handleSubmit","errors","formState","setLoading","apiError","setApiError","isDirty","onSubmit","values","a","toaster","success","message","className","size","intent","marginBottom","title","name","defaultValue","fullName","render","onChange","value","label","inputHeight","isInvalid","validationMessage","placeholder","email","type","height","appearance","onClick","isShown","onConfirm","onCloseComplete","color","username","href","window","location","origin","signinSchema","Joi","object","string","tlds","allow","required","password","min","max","signupSchema","trim","alphanum"],"mappings":"wUAgBe,SAASA,IAAW,IAAD,IACEC,cAA1BC,EADwB,EACxBA,KAAMC,EADkB,EAClBA,QAASC,EADS,EACTA,OADS,EAEkBC,oBAAS,GAF3B,mBAEzBC,EAFyB,KAENC,EAFM,OAGqBC,YAAQ,CAC3DC,SAAUC,sBAAYC,KACtBC,KAAM,aAFAC,EAHwB,EAGxBA,QAASC,EAHe,EAGfA,aAAcC,EAHC,EAGDA,OAAQC,EAHP,EAGOA,UAHP,EAOFX,oBAAS,GAPP,mBAOhBY,GAPgB,aAQAZ,qBARA,mBAQzBa,EARyB,KAQfC,EARe,KASxBC,EAAYJ,EAAZI,QAEFC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACfN,GAAW,GADI,kBAGPb,EAAOkB,GAHA,OAIbE,IAAQC,QAAQ,oBAJH,gDAMbN,EAAY,KAAIO,SANH,QAQfT,GAAW,GARI,yDAAH,sDAWd,OACE,sBAAKU,UAAU,0BAAf,UACE,cAAC,IAAD,CAAQA,UAAU,iBAAlB,wBAEA,cAAC,IAAD,CAAQC,KAAM,IAAKD,UAAU,aAA7B,4BAGA,uBAAMN,SAAUP,EAAaO,GAA7B,YACKH,GACD,cAAC,IAAD,CAAOW,OAAO,SAASC,aAAc,GAAIC,MAAOb,IAElD,sBAAKS,UAAU,gBAAf,UACE,cAAC,IAAD,CACEK,KAAK,WACLnB,QAASA,EACToB,aAAc/B,EAAKgC,SACnBC,OAAQ,kBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACN,cAAC,IAAD,CACEC,MAAM,OACNC,YAAa,GACbC,YAAazB,EAAOmB,SACpBO,kBAAiB,UAAE1B,EAAOmB,gBAAT,aAAE,EAAiBR,QACpCU,SAAUA,EACVC,MAAOA,EACPK,YAAY,YAKlB,cAAC,IAAD,CACEV,KAAK,QACLnB,QAASA,EACToB,aAAc/B,EAAKyC,MACnBR,OAAQ,kBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACN,cAAC,IAAD,CACEC,MAAM,QACNC,YAAa,GACbC,YAAazB,EAAO4B,MACpBF,kBAAiB,UAAE1B,EAAO4B,aAAT,aAAE,EAAcjB,QACjCU,SAAUA,EACVC,MAAOA,EACPO,KAAK,QACLF,YAAY,gBAKpB,cAAC,KAAD,GAAQG,OAAQ,IAAhB,uBAA4B,IAA5B,qBAAqC,UAArC,0BAAyDzB,GAAzD,gDAIF,cAAC,IAAD,CAAQQ,KAAM,IAAKD,UAAU,aAA7B,6BAGA,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CAAQkB,OAAQ,GAAIC,WAAW,UAA/B,8BAKF,cAAC,IAAD,CAAQlB,KAAM,IAAKD,UAAU,aAA7B,yBAGA,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CACEkB,OAAQ,GACRhB,OAAO,SACPiB,WAAW,UACXC,QAAS,kBAAMxC,GAAqB,IAJtC,8BASDD,GACC,cAAC,IAAD,CACE0C,SAAO,EACPjB,MAAM,gBACNF,OAAO,SACPoB,UAAW9C,EACX+C,gBAAiB,kBAAM3C,GAAqB,IAL9C,SAOE,sBAAKoB,UAAU,qBAAf,UACE,cAAC,IAAD,CAAMwB,MAAM,QAAQvB,KAAM,IAA1B,iFAIA,uBACA,uBACA,eAAC,IAAD,CAAMuB,MAAM,QAAQvB,KAAM,IAA1B,4EAEG1B,EAAKkD,SAFR,iGAG8C,IAC5C,cAAC,IAAD,CAAMC,KAAI,UAAKC,OAAOC,SAASC,OAArB,YAA+BtD,EAAKkD,UAA9C,2C,gCClId,2HAKaK,EAAeC,IAAIC,OAAO,CACrChB,MAAOe,IAAIE,SACRjB,MAAM,CAAEkB,KAAM,CAAEC,OAAO,KACvBC,WACHC,SAAUN,IAAIE,SAASG,WAAWE,IAAI,GAAGC,IAAI,MAGlCC,EAAeT,IAAIC,OAAO,CACrChB,MAAOe,IAAIE,SACRjB,MAAM,CAAEkB,KAAM,CAAEC,OAAO,KACvBC,WACHC,SAAUN,IAAIE,SAASG,WAAWE,IAAI,GAAGC,IAAI,IAC7ChC,SAAUwB,IAAIE,SAASK,IAAI,GAAGC,IAAI,IAAIE,OAAOL,WAC7CX,SAAUM,IAAIE,SAASK,IAAI,GAAGC,IAAI,IAAIG,WAAWD,OAAOL,aAM7CpD,EAAgB+C,IAAIC,OAAO,CACtCzB,SAAUwB,IAAIE,SAASG,WAAWE,IAAI,GAAGC,IAAI,IAC7CvB,MAAOe,IAAIE,SAASjB,MAAM,CAAEkB,KAAM,CAAEC,OAAO","file":"static/js/11.65305b35.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"components/button/Button\";\nimport {\n  Alert,\n  Dialog,\n  Link,\n  Strong,\n  Text,\n  TextInputField,\n  toaster,\n} from \"evergreen-ui\";\nimport { useAuth } from \"context/auth.context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { profileSchema } from \"services/validations\";\nimport { joiResolver } from \"@hookform/resolvers/joi\";\n\nexport default function Account() {\n  const { user, _delete, update } = useAuth();\n  const [showDeleteWarning, setShowDeleteWarning] = useState(false);\n  const { control, handleSubmit, errors, formState } = useForm({\n    resolver: joiResolver(profileSchema),\n    mode: \"onChange\",\n  });\n  const [loading, setLoading] = useState(false);\n  const [apiError, setApiError] = useState();\n  const { isDirty } = formState;\n\n  const onSubmit = async (values) => {\n    setLoading(true);\n    try {\n      await update(values);\n      toaster.success(\"Account Updated!\");\n    } catch (err) {\n      setApiError(err.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"account page__container\">\n      <Strong className=\"account__title\">My Account</Strong>\n\n      <Strong size={600} className=\"box__title\">\n        My information\n      </Strong>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {!!apiError && (\n          <Alert intent=\"danger\" marginBottom={15} title={apiError} />\n        )}\n        <div className=\"box shadow-sm\">\n          <Controller\n            name=\"fullName\"\n            control={control}\n            defaultValue={user.fullName}\n            render={({ onChange, value }) => (\n              <TextInputField\n                label=\"Name\"\n                inputHeight={40}\n                isInvalid={!!errors.fullName}\n                validationMessage={errors.fullName?.message}\n                onChange={onChange}\n                value={value}\n                placeholder=\"Name\"\n              />\n            )}\n          />\n\n          <Controller\n            name=\"email\"\n            control={control}\n            defaultValue={user.email}\n            render={({ onChange, value }) => (\n              <TextInputField\n                label=\"Email\"\n                inputHeight={40}\n                isInvalid={!!errors.email}\n                validationMessage={errors.email?.message}\n                onChange={onChange}\n                value={value}\n                type=\"email\"\n                placeholder=\"Email\"\n              />\n            )}\n          />\n        </div>\n        <Button height={40} height={50} type=\"submit\" disabled={!isDirty}>\n          Save details\n        </Button>\n      </form>\n      <Strong size={600} className=\"box__title\">\n        Account actions\n      </Strong>\n      <div className=\"box shadow-sm\">\n        <Button height={40} appearance=\"primary\">\n          Reset Password\n        </Button>\n      </div>\n\n      <Strong size={600} className=\"box__title\">\n        Danger Zone\n      </Strong>\n      <div className=\"box shadow-sm\">\n        <Button\n          height={40}\n          intent=\"danger\"\n          appearance=\"primary\"\n          onClick={() => setShowDeleteWarning(true)}\n        >\n          Delete Account\n        </Button>\n      </div>\n      {showDeleteWarning && (\n        <Dialog\n          isShown\n          title=\"Are you sure?\"\n          intent=\"danger\"\n          onConfirm={_delete}\n          onCloseComplete={() => setShowDeleteWarning(false)}\n        >\n          <div className=\"delete-user-dialog\">\n            <Text color=\"black\" size={500}>\n              Deleting your account is irreversible. Please proceed with\n              caution.\n            </Text>\n            <br />\n            <br />\n            <Text color=\"black\" size={500}>\n              By selecting YES, DELETE MY ACCOUNT below, your primary tree (@\n              {user.username}) will be imediately terminated and your data will\n              be lost. Visitors will no longer be able to{\" \"}\n              <Link href={`${window.location.origin}/${user.username}`}>\n                access your URL.\n              </Link>\n            </Text>\n          </div>\n        </Dialog>\n      )}\n    </div>\n  );\n}\n","import Joi from \"joi\";\n\n/**\n * Auth Schemas\n */\nexport const signinSchema = Joi.object({\n  email: Joi.string()\n    .email({ tlds: { allow: false } })\n    .required(),\n  password: Joi.string().required().min(6).max(24),\n});\n\nexport const signupSchema = Joi.object({\n  email: Joi.string()\n    .email({ tlds: { allow: false } })\n    .required(),\n  password: Joi.string().required().min(6).max(24),\n  fullName: Joi.string().min(4).max(30).trim().required(),\n  username: Joi.string().min(3).max(20).alphanum().trim().required(),\n});\n\n/**\n * User Schemas\n */\nexport const profileSchema = Joi.object({\n  fullName: Joi.string().required().min(4).max(24),\n  email: Joi.string().email({ tlds: { allow: false } }),\n});\n"],"sourceRoot":""}